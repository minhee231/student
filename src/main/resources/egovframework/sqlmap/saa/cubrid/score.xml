<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.saa.module.student.service.impl.ScoreMapper">

	<select id="selectStudentGrade" resultType="string">
		SELECT
			student_grade
		FROM saa_student_register
		WHERE student_id = #{id};
	</select>

	<select id="selectSubjectList" resultType="egovMap">
		SELECT
			*
		FROM ssa_student_subject_information
		WHERE student_grade = #{grade}
		AND subject_year = #{nowYear} - CAST((SELECT (student_grade-#{grade}) FROM saa_student_register WHERE student_id = #{studentId}) AS INT);
	</select>

	<!--<select id="selectStudentScoresList" resultType="egovMap">
		SELECT
			*
		FROM saa_student_scores_information sc

		JOIN ssa_student_subject_information sj ON sc.subject_id = sj.subject_id

		WHERE sc.student_id = #{studentId} AND sj.student_grade = #{grade};
	</select>-->

	<select id="selectStudentScoresList" resultType="egovMap">
	SELECT
        sc.scores_id,
        sc.student_id,
        sc.score_year,
        sc.semester,
        sc.score_divion,
        sc.subject_id,
        sc.scores,
        sj.subject_name,
        sj.subject_year,
        sj.student_department,
        sj.student_grade,
        SUM(sc.scores) OVER(PARTITION BY sc.semester, sc.score_divion) AS total_sum,
        ROUND(AVG(sc.scores) OVER(PARTITION BY sc.semester, sc.score_divion), 1) AS avg_score

	FROM saa_student_scores_information sc
	JOIN ssa_student_subject_information sj ON sc.subject_id = sj.subject_id
	WHERE sc.student_id = #{studentId}
		AND sj.student_grade = #{grade};

	</select>

	<select id="selectSubjectNameByScoreId" resultType="string">
		SELECT
			subject_name
		FROM ssa_student_subject_information
		WHERE subject_id = (
			SELECT subject_id
			FROM saa_student_scores_information
			WHERE scores_id = #{scoresId}
			)
	</select>

	<select id="selectSubjectNamesByGrade" resultType="string">
		SELECT subject_name
		FROM ssa_student_subject_information
		WHERE subject_year = #{year}
		AND student_grade = #{grade}
	</select>

	<select id="selectScoresRank" resultType="egovMap">
		SELECT DISTINCT
			sc.student_grade,
			sc.student_class,
			sc.student_number,
			(SELECT student_name FROM saa_student_register WHERE student_id = si.student_id) AS student_name,
			ROUND(SUM(si.scores) OVER(PARTITION BY si.score_year,si.semester, si.score_divion,si.student_id),1) AS total_sum,
			ROUND(AVG(si.scores) OVER(PARTITION BY si.score_year,si.semester, si.score_divion,si.student_id), 1) AS avg_score,
		    si.score_year,
		    si.student_id
		FROM
		    saa_student_scores_information AS si
		JOIN
		    ssa_student_subject_information AS s ON si.subject_id = s.subject_id
		JOIN
			saa_student_class_information AS sc ON si.student_id = sc.student_id AND sc.class_year =#{year}

		WHERE si.semester = #{semester} AND si.score_divion = #{divion} AND s.student_grade = #{grade}
		ORDER BY
		    total_sum DESC;
	</select>

	<update id="updateScore">
		UPDATE
			saa_student_scores_information
		SET scores = #{scores}
		WHERE scores_id = #{scoresId}
	</update>

<!--	<insert id="insertScore">
		INSERT INTO saa_student_scores_information (
			scores_id,
			student_id,
			score_year,
			semester,
			score_divion,
			subject_id,
			scores
			)
		VALUE (
			#{scoresId},
			#{studentId},
			#{nowYear} - CAST((SELECT (student_grade-#{grade}) FROM saa_student_register WHERE student_id = #{studentId}) AS INT),
			#{semester},
			#{division},
			(SELECT subject_id FROM ssa_student_subject_information
				WHERE subject_year = #{nowYear} - CAST((SELECT (student_grade-#{grade}) FROM saa_student_register WHERE student_id = #{studentId}) AS INT)
				AND subject_name = #{subjectName}
				AND student_grade = #{grade}
				),
			#{score}
		)
	</insert>-->

	<insert id="insertScore">
		INSERT INTO saa_student_scores_information (
			scores_id,
			student_id,
			score_year,
			semester,
			score_divion,
			subject_id,
			scores
			)
		VALUE (
			#{scoresId},
			#{studentId},
			#{year},
			#{semester},
			#{division},
			#{subjectId},
			#{score}
		)
	</insert>
</mapper>